#include<stdio.h>
#include<stdlib.h>
#include<pthread.h>
#include<semaphore.h>
char buf[24];
sem_t mutex;
void myfunction1(void *ptr)
{
    sleep(1);
    char *msg=(char *)ptr;
    printf("%s\n",msg);

    sem_wait(&mutex);
    sprintf(buf,"%s","function fb()");
    printf("%s\n",buf);
    sem_post(&mutex);
    pthread_exit(0);
}
void myfunction2(void *ptr)
{
    char *msg=(char *)ptr;
    printf("%s\n",msg);
    sem_wait(&mutex);
    sprintf(buf,"%s","function fa()");
    printf("%s\n",buf);
    sem_post(&mutex);
    pthread_exit(0);
}
void myfunction3(void *ptr)
{
    sleep(2);
    char *msg=(char *)ptr;
    printf("%s\n",msg);
    sem_wait(&mutex);
    sprintf(buf,"%s","function fc()");
    printf("%s\n",buf);
    sem_post(&mutex);
    pthread_exit(0);
}
int main(int argc,char *argv[])
{
    pthread_t thread1;
    pthread_t thread2;
    char *msg1="Thread1";
    char *msg2="Thread2";
    sem_init(&mutex,0,1);
    pthread_create(&thread1,NULL,(void *) &myfunction1,(void*) msg1);
    pthread_create(&thread2,NULL,(void *) &myfunction2,(void*) msg2);
    pthread_create(&thread2,NULL,(void *) &myfunction3,(void*) msg2);
    pthread_join(thread1,NULL);
    pthread_join(thread2,NULL);
    sem_destroy(&mutex);
    return 0;
}

